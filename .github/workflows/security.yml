name: Security Scan

on:
  schedule:
    - cron: '0 2 * * 1'  # Run every Monday at 2 AM
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety semgrep

    - name: Run Bandit security linter
      run: |
        export PYTHONPATH=src:$PYTHONPATH
        python -m bandit -r src/ -f json -o bandit-report.json || echo "Bandit scan completed"

    - name: Run Safety check
      run: |
        python -m safety check --json --output safety-report.json || echo "Safety check completed"

    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/python
          p/owasp-top-ten
        generateSarif: "1"

    - name: Upload Semgrep results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: semgrep.sarif

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Check for outdated dependencies
      run: |
        pip list --outdated || echo "Dependency check completed"

    - name: Audit dependencies
      run: |
        python -m safety check || echo "Dependency audit completed"

  container-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t brick2:security-scan .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'brick2:security-scan'
        format: 'sarif'
        output: 'trivy-image-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-image-results.sarif'
